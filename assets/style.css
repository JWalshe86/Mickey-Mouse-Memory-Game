*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* padding not included in size  */
  box-sizing: border-box;
}

body {
  /* body will take 100% of available viewport space */
  height: 100vh;
  font-family: "Mouse Memoirs", sans-serif;
  font-family: "Open Sans", sans-serif;
  font-family: "Permanent Marker";
}

/* styling for landing page */

/* container for title */

.title-container {
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  width: 100%;
  font-size: 10vh;
  top: 20vh;
  bottom: 70vh;
  flex-wrap: wrap;
  flex-direction: column;
  align-content: center;
  width: inherit;
}

.heroTitle {
  /* centers the top of the text to the middle */
  position: relative;
  top: 20%;
  color: #FFEC3D;
  font-size: 3vw;
  padding: 1vw;
  text-shadow: 2px 2px 10px black, 7px 7px 4px #a34c06;
}





/* styling for hero image title */
.hero-image {
  background-image: url(./images/test.jpg);
  justify-content: center;
  height: 100vh;
  display: flex;
  background-size: 100% 100%;
}

.buttons-container {
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  top: 80%;
  position: absolute;
  height: 7vh;
  width: 100%;
}

/* styling of play & how to play buttons code adapted from GreatStack */

.howToPlay1,
.play-button, .mute-button {
  display: inline-block;
  font-size: 4vh;
  padding: 2vw;
  font-weight: bold;
  font-family: "Mouse Memoirs", sans-serif;
  background: #FFEC3D;
  color: black;
  border-radius: 20px;
  border: none;
  outline: none;
  cursor: pointer;
  position: relative;
  box-shadow: 0 2px 25px;
  /* put bubbles behind button */
  z-index: 2;
  min-width: fit-content;
}

.howToPlay1:hover,
.play-button:hover, .mute-button:hover {
  background-color: #FFEC3D; /* change to your desired color */
  color: #FF3C14; /* change to your desired color */
  box-shadow: 0 20px 100px;
}

/* creates 'bubbles' */
/* bubbles converted into stars using code adapted from [coding Artist](https: //www.youtube.com/watch?v=LZx_Hyudmdw) */
.howToPlay1 span,
.play-button span {
  width: 0;
  height: 0;
  border-bottom: 20px solid yellow;
  border-left: 13px solid transparent;
  border-right: 13px solid transparent;
  z-index: -1;
  position: absolute;
  display: block;
  /* so the bubbles will be invisible */
  transform: scale(0);
}

.howToPlay1 span::before,
.play-button span::before {
  position: absolute;
  content: "";
  width: 0;
  height: 0;
  border-top: 20px solid yellow;
  border-left: 13px solid transparent;
  border-right: 13px solid transparent;
  top: 7px;
  left: -13px;
  z-index: -1;
}

.play-button span:nth-child(1),
.howToPlay1 span:nth-child(1) {
  top: -1000%;
  left: -1300%;
}

.play-button span:nth-child(2),
.howToPlay1 span:nth-child(2) {
  top: -1300%;
  left: 500%;
}

.play-button span:nth-child(3),
.howToPlay1 span:nth-child(3) {
  top: -50%;
  left: -1000%;
  background: transparent;
}

.play-button span:nth-child(4),
.howToPlay1 span:nth-child(4) {
  top: -1500%;
  left: -400%;
}

.play-button span:nth-child(5),
.howToPlay1 span:nth-child(5) {
  top: -90%;
  left: 28%;
}

.play-button span:nth-child(6),
.howToPlay1 span:nth-child(6) {
  top: -70%;
  left: -1000%;
}

.play-button span:nth-child(7),
.howToPlay1 span:nth-child(7) {
  top: -1200%;
  left: -1100%;
  background: transparent;
}

.play-button span:nth-child(8),
.howToPlay1 span:nth-child(8) {
  top: -2500%;
  left: -1200%;
}

.play-button span:nth-child(9),
.howToPlay1 span:nth-child(9) {
  top: -1000%;
  left: -600%;
}

.play-button span:nth-child(10),
.howToPlay1 span:nth-child(10) {
  top: -70%;
  left: 400%;
}

.play-button span:nth-child(11),
.howToPlay1 span:nth-child(11) {
  top: -600%;
  left: 600%;
  background: transparent;
}

.play-button span:nth-child(12),
.howToPlay1 span:nth-child(12) {
  top: -50%;
  left: 110%;
}

.play-button span:nth-child(13),
.howToPlay1 span:nth-child(13) {
  top: 40%;
  left: -200%;
}

.play-button span:nth-child(14),
.howToPlay1 span:nth-child(14) {
  top: 60%;
  left: 120%;
}

.play-button span:nth-child(15),
.howToPlay1 span:nth-child(15) {
  top: -2200%;
  left: -10%;
}

.play-button span:nth-child(16),
.howToPlay1 span:nth-child(16) {
  top: -2200%;
  left: 300%;
  background: transparent;
}

.play-button span:nth-child(17),
.howToPlay1 span:nth-child(17) {
  top: -1000%;
  left: 10%;
}

.play-button span:nth-child(18),
.howToPlay1 span:nth-child(18) {
  top: -300%;
  left: -1000%;
}

.play-button span:nth-child(19),
.howToPlay1 span:nth-child(19) {
  top: -4500%;
  left: 33%;
  background: transparent;
}

.play-button span:nth-child(20),
.howToPlay1 span:nth-child(20) {
  top: -1000%;
  left: 1000%;
}

.play-button span:nth-child(21),
.howToPlay1 span:nth-child(21) {
  top: -2500%;
  left: 1000%;
}

.play-button span:nth-child(22),
.howToPlay1 span:nth-child(22) {
  top: -2000%;
  left: 1000%;
  background-color: transparent;
}

.play-button span:nth-child(23),
.howToPlay1 span:nth-child(23) {
  top: -2000%;
  left: -1500%;
}

.play-button span:nth-child(24),
.howToPlay1 span:nth-child(24) {
  top: -3500%;
  left: -1000%;
}

/* forwards means it will stop the animation after one time running */
.anim {
  animation: moving 1s linear reverse forwards;
}

/* forwards means it will stop the animation after one time running */
.anim {
  animation: moving 2s linear reverse forwards;
}

@keyframes moving {
  50% {
    transform: scale(0.5);
  }

  100% {
    transform: scale(1);
  }

  100% {
    top: 100%;
    left: 50%;
  }
}

.play-button {
  text-decoration: none;
}

/* styling for when the buttons are clicked */

.howToPlay1:active,
.play-button:active {
  background: #d80972;
  box-shadow: 0 2px 25px;
}

/* styling for game */
/* Code adapted from [Marina-Ferria](https: //www.youtube.com/watch?v=ZniVgo8U7ek) */

.card-container {
  /* set width for container */
  width: 70vw;
  height: 70vh;
  display: flex;
  /* introduce rows  */
  flex-wrap: wrap;
  /* For 3D effect when card flipped.Perspective property gives depth to elements
     */
  perspective: 1000px;
  padding-top: 1%;
  contain:content;
}

/* styling for Reset button, timer and counter */
/* Code adapted from [Iris Smok](https: //github.com/Iris-Smok/Kids-Memory-Game_PP2/blob/main/index.html) */
/* styling to shape the info div like a flag adapted from Zoe Rooney: css-tricks.com */

.info-container {
  content: "";
  position: relative;
  left: 0;
  bottom: 0;
  width: 72%;
  height: 0;
  border-left: 10vh solid transparent;
  border-bottom: 7vh solid rgba(72, 98, 247, 0.8);
  border-top: 7vh solid rgba(72, 98, 247, 0.8);
  gap: 2vh;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 2vw;
}
.info-container::after {
  width: 50%;
  position: absolute;
}

.infoContainerAfterClick{
  font-size: 3vw;
}



/* to keep timer & counter on same line & responsive to screen size */

.timer-counter-container {
  display: flex;
  justify-content: center;
  align-items: center;
  color: yellow;
  text-shadow: 2px 2px 2px black;
}

/* game & info stay in same screen */

.info-game-container {
  display: flex;
  flex-direction: column;
  height: inherit;
  background-image: url(./images/game-background\ 1500px.png);
  /* advice from W3Schools on using background size 100% 100% to keep background img stable  */
  background-size: 100% 100%;
  align-items: center;
  padding-top: 2%;
}

.info-game-container-hideCards > :not(.opencongratsModal-popup) {
  /* visibility: hidden; */
}

.timer {
  margin-right: 2vw;
  margin-left: 1vw;
}

.counter {
  position: relative;
  display: inline-block;
  padding-left: 0;
}

span.counter {
  padding-left: 1px;
  padding-right: 1rem;
}

#reset-container {
  width: 100%;
}

.memory-card {
  /* 4 cards @ 25% each for row, 3 cards @ 33% each for columns */
  /* The css calc function allows one to remove 
    the width of the margin from the width & height so that the cards fit into the container again 
    and the 3*4 structure is maintained */
  width: calc(25% - 10px);
  height: calc(33% - 10px);
  /* gives the cards a position which the front and back cards can position themselves from */
  position: relative;
  margin: 5px;
  /* so the active card knows to start from 1 when transitioning */
  transform: scale(1);

  /* \Inserts memory card element inside 3D space created in card container*/
  transform-style: preserve-3d;
  /* evokes the action of the transform property */
  transition: transform.5s;
}

/* The card will decrease by .3 when active over .2s */
.memory-card:active {
  /* transform: scale(.97); */
  transition: transform 0.2s;
}

/* styling flip card both classes belong to the same element, so no spaces between names */
/* when the clip class is present rotate Y 180 degrees */
.memory-card.flip {
  transform: rotateY(180deg);
}

.card-front,
.card-back {
  /* images take whole width & height of container */
  width: 100%;
  height: 100%;
  /* places the front and back cards on top of one another */
  position: absolute;
  padding: 2%;
  border-radius: 5px;
  background-color: white;
  /*Every HTML element has a mirrored image of itself. The property backface-visibility 
     defaults to visible so one needs to put this to hidden before the front of the cards 
     can be shown when flipped*/
  backface-visibility: hidden;
  /* so image is sharp */
  object-fit: contain;
  cursor: pointer;
  border-color: black;
  border: outset;
}

.card-front {
  /* front card rotated 180 degrees so it can be seen when filpcard is activated */
  transform: rotateY(180deg);
}

.card-back{
  background-color: #FFEC3D;
}

.card-front.front1 {
  transform: inherit;
}

/* styling for modal. Code adapted from WebDevSimplified */

.modal {
  position: fixed;
  /* centers the top of the text to the middle */
  top: 50%;
  left: 50%;
  /* change the position of the elements 
        50% here is 50% of the size of the container 
        not the entire screen like above
        Setting the scale to zero means it's invisible*/
  transform: translate(-50%, -50%) scale(0);
  /* scale allows for a smooth transition, as opposed to display: none */
  transition: 200ms ease-in-out;
  border: 1px solid black;
  border-radius: 10px;
  /* want modal to draw above everything else */
  z-index: 10;
  background-color: white;
  width: 80vw;
  height: 80vh;
  contain: content;

  /* Add scroll behaviour to modal for smaller screensizes adapted from stackoverflow */
  max-height: calc(100vh - 210px);
  overflow-y: auto;
}

.modal.active {
  transform: translate(-50%, -50%) scale(1);
}

.modal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid black;
  background-color: yellow;
}

.modal-header .title {
/* use of vw instead of rem, as it makes size responsive */
  font-size: 3vw;
  font-weight: bold;
  /* extra padding on left to account for x */
  padding: 0 24vw 0 27vw;
}

.howWin, .hardMode {
  display: flex;
  padding: 1.5vh;
  justify-content: center;
  font-size: 3vw;
  font-weight: bold;
}

.modal-header .close-button {
  cursor: pointer;
  border: none;
  outline: none;
  background: none;
  font-size: 4vw;
  font-weight: bold;
  color: black;
  box-shadow: none;
  padding-right: 2vw;
}

.modal-body {
  line-height: 2;
  text-transform: capitalize;
  font-size: 2vw;
  padding:0 8vw 0 8vw;
  color: yellow;
  text-shadow: 3px 3px 3px black;
  background-color: midnightblue;
}

#modal-overlay {
  position: fixed;
  /* so by default the modal doesn't display */
  opacity: 0;
  transition: 200ms ease-in-out;
  /* stretches overlay all over the screen */
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(255, 235, 60, 0.5);
  /* so the open modal button works when the overlay is not active */
  pointer-events: none;
}

/* so one can toggle between overlay being present of not */
#modal-overlay.active {
  pointer-events: all;
  opacity: 1;
}

/* overlay for congrats popup */

#modal-overlay.active1 {
  pointer-events: all;
  opacity: 1;
  background-color: rgba(255, 235, 60, 0.9);
  z-index: 1;
}

.congratsModal-overlay {
  position: fixed;
  /* so by default the modal doesn't display */
  opacity: 0;
  transition: 200ms ease-in-out;
  /* stretches overlay all over the screen */
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  /* so the open modal button works when the overlay is not active */
  pointer-events: none;
}

/* so one can toggle between overlay being present of not */
.congratsModal-overlay.active {
  pointer-events: all;
  opacity: 1;
}

.congratsModal-container {
  position: relative;
  display: flex;
  width: 100vw;
  bottom: -35%;
}

.congratsModal-popup {
  width: 30%;
  background: white;
  border-radius: 6px;
  position: absolute;
  left: 52vw;
  /* to add zoom out effect */
  transform: translate(-50%, -50%) scale(0.1);
  padding: 0 30px 30px;
  color: #333;
  visibility: hidden;
  transition: transform 0.4s, top 0.4s;
  z-index: 2;
}

.opencongratsModal-popup {
  visibility: visible;
  transform: translate(-50%, -50%) scale(1.1);
  position: relative;
}

.congratsModal-popup img {
  width: 100%;
}

.congratsModal-popup button {
  width: 100%;
  margin-top: 15px;
  padding: 10px 0;
  background: black;
  color: white;
  outline: none;
  font-size: 7vh;
  border-radius: 4px;
  cursor: pointer;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  font-family: "Mouse Memoirs", sans-serif;
}

.congratsCounter {
  padding-top: 4vh;
}

.congratsCounter, .congratsTimer, .congratsStars {
  font-size: 2.5vh;
  text-align: center;
}

.wrapper {
  display: flex;
  flex-wrap: wrap;
}


/* stars code adapted from Susan Chen */
.info-container .stars {
  margin: 0 1.25rem 0 0;
  padding: 1vw;
  display: inline-block;
  color: #FFEB3D;
  text-shadow: 2px 2px 2px black;
}

.info-container .stars li {
  /* remove bullet points */
  list-style: none;
  /* put the stars in even row */
  display: inline-block;
}

/* hollowed out stars  */

i.fa.fa-star.dimmed {
  mix-blend-mode: overlay;
}

.fa-star:before {
  color: yellow;
  float: right;
  left: 2px;
  position: relative;
}

span.starCounter {
  visibility: hidden;
}

.fa-repeat {
  cursor: pointer;
  padding: 1vw;
}

h3 {
  color: yellow;
  font-size: 1.5vw;
  text-shadow: 2px 2px 2px black;
}

.after{
  display:none;
}

/* styling for 404 error page */

.ErrorBody{
  background-image: url(https://images.unsplash.com/photo-1616235132417-99f443954d2e?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=334&q=80);
  background-size: cover;
  display: flex;
  font-family: "Mouse Memoirs", sans-serif;
  align-content: center;
  justify-content: center;
  align-items: center;
}
.Errormain{
  display: flex;
  height: 100vh;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}
.header404{
  font-family: "Mouse Memoirs", sans-serif;
  font-size: 15vh;
  text-align: center;
}

.ErrorBody a {
  display: flex;
  justify-content: center;
}

/* card shake style */

/* Each keyframe is activated within .35s interval */
@keyframes horizontal-shaking {
  0% { transform: translateX(0) }
  25% { transform: translateX(5px) }
  50% { transform: translateX(-5px) }
  75% { transform: translateX(5px) }
  100% { transform: translateX(0) }
}

.card-front.horizontal-shake {
  animation: horizontal-shaking .35s 0s 5;
}

/* Shaking for click any card to begin */

@keyframes jump-shaking {
  0% { transform: translateX(0) }
  25% { transform: translateY(-9px) }
  35% { transform: translateY(-9px) rotate(7deg) }
  55% { transform: translateY(-9px) rotate(-7deg) }
  65% { transform: translateY(-9px) rotate(7deg) }
  75% { transform: translateY(-9px) rotate(-7deg) }
  100% { transform: translateY(0) rotate(0) }
}

h3.cardShake {
  animation: jump-shaking 0.83s infinite;
}

/* To hide cards in background when they match & shake */

.visibilityHidden {
    visibility: hidden; 
}
/* to push viewer to bottom of game page when play button pressed */
#anchor1{
  bottom: 77px;
  visibility: hidden;
  background-color:transparent;
}

/*----------------FOOTER---*/
/* code adapted from Iris Smok */

footer {
	float: left;
	width: 100%;
	text-align: center;
	background-color: #FFEC3D;
	color: black;
  display: flex;
  justify-content:space-evenly;
}

footer div {
	padding: 4vh;
	display: flex;
	position: relative;
  font-size:2vw;
}

footer i {
	font-size: 180%;
	color: black;
	margin: 0.5% 5%;
	padding: 1% 0.5%;
}

div.social.links{
  column-gap: 2vw;
  padding-right: 6vw;
}

.social-media a {
	margin-left: 2%;
}

a.fab.fa-{
    font-weight: bold;
    text-decoration: none;
    position: relative;
    font-family: "Mouse Memoirs", sans-serif;
    font-size: 180%;
    color: black;
    margin: 0.5% 5%;
}


/* @Media queries */


@media screen and (min-width: 350px) and (max-width: 500px) {
  .modal-header .title {
    padding-left: 38vw !important;
  }
  .modal-body {
    font-size: 12px !important;
  }
  .opencongratsModal-popup {
    visibility: visible;
    transform: translate(-50%, -50%) scale(1.1);
    position: relative;
    bottom: -70%;
  }

  .heroTitle {
    font-size: 4vh;
    top: 12vh;
    padding-left: 8.5vw;
    text-align: center;
  }

  .modal {
    width: 95vw;
  }

  .howToPlay1,
  .play-button {
    padding: 5vw;
  }
  .timer {
    float: right;
    margin-right: 2vw;
    margin-left: 2vw;
  }
}

@media screen and (min-width: 500px) and (max-width: 600px) {
}
.title-container {
  top: -3vh;
}

@media (min-width: 667px) {
  .turnDeviceWrapper {
    display: none;
  }
  .congratsModal-popup {
    width: 40%;
  }
}

@media (max-width: 667px) {

  .modal-header .title {
    padding: 0 20vw 0 27vw;
    font-size: 4vw;
  }
}


/* Shows pop up when portrait */

@media screen and (min-width: 240px) and (max-width: 350px) {
  .heroTitle {
    font-size: 4vh;
    top: 5vh;
    text-align: center;
    padding-right: 11vw;
  }
}

/* code to prompt user to flip device on smaller devices adapted from Jarrod Whitley */

/* Hides pop up when landscape */
@media only screen and (min-width: 280px) and (max-width: 667px) and (orientation: landscape) {
  
  h3 {
    font-size: smaller;
  }

  .pop-up {
    display: none;
  }
  .opencongratsModal-popup {
    bottom: -0.5vh;
  }
  .modal-body {
    font-size: 12px !important;
  }
  
}

@media only screen and (min-width: 250px) and (max-width: 667px) and (orientation: portrait) {
  .pop-up {
    position: absolute;
    align-content: center;
    top: 50vh;
    z-index: 2;
    font-size: x-large;
    text-align: center;
  }
  .info-game-container {
    background-image: none;
    background-color: rgba(255 , 235, 61, 0.7);
  }
  .card-container {
    display: none;
  }
  .info-container {
    visibility: hidden;
  }
  .form-box{
    display:none;
  }

  footer{
    display: none;
  }
 
  #reset {
    display: none;
  }
  .turnDeviceWrapper {
    display: flex;
    position: relative;
    justify-content: center;
  }
}

@media (max-width: 350px) {
  .heroTitle {
    font-size: 3.5vh !important;
  }

  .modal-body{
    font-size: 3.5vw !important;
  }
  .congratsModal-popup {
    font-size: medium;
  }
  .title-container{
    padding-left:15vw;
  }
  .modal-header .title {
    padding: 0 10vw 0 17vw;
    font-size: 4vw;
  }
}

@media screen and (min-width: 350px) and (max-width: 650px) {
  .heroTitle {
    top: 13vh;
  }
}

@media screen and (min-width: 800px) and (max-width: 1000px){
  h3{
    font-size: 3vw !important;
  }
  .timer-counter-container{
    font-size: 1.5vh !important;
  }
}

@media screen and (min-width: 650px) and (max-width: 800px) and (min-height: 800px) and (max-height: 1030px) {
  .heroTitle {
    font-size: 4vh;
    top: 4vh;
    text-align: center;
  }

  h3{
    font-size: 3vh !important;
  }
  .timer-counter-container{
    font-size: 3vh ;
  }
}

@media screen and (max-width: 800px) {
  .info-container {
    content: "";
    position: relative;
    left: 0;
    bottom: 0;
    width: 75%;
    height: 0;
    gap: 2vh;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
  }
  .info-container::after {
    width: 71%;
    position: absolute;
  }
 
  .congratsCounter, .congratsTimer, .congratsStars {
    font-size: 2vh !important;
  }
  }

@media (max-width: 1200px) {
  .heroTitle {
    font-size: 5vh;
  }

  .hero-image {
    background-position: center;
  }
}

@media (max-width: 1500px) {
  .heroTitle {
    text-align: center;
  }
  .congratsCounter, .congratsTimer, .congratsStars {
    font-size: 4vh !important;
  }
  .hero-image {
    background-size: cover !important;
    background-position: center;
  }

  h3 {
    font-size: 4vh;
  }
}

.hidden {
  display: none;
}

/* Toggle button styling */

.button-box {
  width: 17vw;
  height: 7vh;
  margin: 2vh auto;
  position: relative;
  border-radius: 30px;
  background: rgb(255, 236, 61, 0.2);
  display: flex;
  border: solid;
}

.toggle-btn{
  padding: 0.5vh 2.5vw;
  cursor: pointer;
  background: transparent;
  border: 0;
  outline: none;
  position: relative;
  text-align: center;
  font-size: 2.2vw;
  font-weight:bolder;
  font-family: "Mouse Memoirs", sans-serif;
}

#btn{
  left:0;
  top:0;
  position: absolute;
  width: 8vw;
  height: 100%;
  background: yellow;
  border-radius: 30px;
  transition: .5s;
}




